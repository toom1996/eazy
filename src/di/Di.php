<?php

namespace eazy\di;

use DI\Container;
use DI\ContainerBuilder;
use eazy\base\BaseObject;

class Di extends BaseObject
{

    /**
     * @var ContainerBuilder
     */
    private static $builder;

    /**
     * @var Container
     */
    public static $container;

    private $_singletons = [];

    public function init()
    {
        static::$container = new ContainerBuilder;
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function get($class, $params = [], $config = [])
    {
        if (isset($this->_singletons[$class])) {
            // singleton
            return static::$container->get($class);
            return $this->_singletons[$class];
        } elseif (!isset($this->_definitions[$class])) {
            return $this->build($class, $params, $config);
        }
    }

    public function build()
    {
        
    }
}